{"ast":null,"code":"var _jsxFileName = \"/Users/abdulquadri/Documents/Development/hotpizza/HotPizzas/src/components/Customize.js\";\nimport React, { Component } from 'react';\nimport { Grid, Container, Radio } from 'semantic-ui-react';\nexport default class Customize extends Component {\n  componentDidMount() {\n    const canvas = this.refs.pizza;\n    const ctx = canvas.getContext('2d');\n    const img = this.refs.image;\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0, 300, 300);\n    };\n  }\n\n  updateCanvas() {\n    // run this when \"canvasLoading\" is false\n    const ctx = this.refs.pizza.getContext(\"2d\");\n    var img = document.createElement(\"img\");\n    img.src = \"../pizza.jpeg\";\n    ctx.drawImage(img, 200, 200, 300, 300); // ctx.fillRect(0,0, 100, 100)\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: \"pizza\",\n      width: 800,\n      height: 800,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      ref: \"image\",\n      src: \"../pizza.jpeg\",\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/abdulquadri/Documents/Development/hotpizza/HotPizzas/src/components/Customize.js"],"names":["React","Component","Grid","Container","Radio","Customize","componentDidMount","canvas","refs","pizza","ctx","getContext","img","image","onload","drawImage","updateCanvas","document","createElement","src","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,KAAzB,QAAqC,mBAArC;AAGA,eAAe,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAM7CK,EAAAA,iBAAiB,GAAE;AACnB,UAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,KAAzB;AACA,UAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMC,GAAG,GAAG,KAAKJ,IAAL,CAAUK,KAAtB;;AAEAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,MAAK;AACjBJ,MAAAA,GAAG,CAACK,SAAJ,CAAcH,GAAd,EAAkB,CAAlB,EAAoB,CAApB,EAAsB,GAAtB,EAA0B,GAA1B;AAGA,KAJD;AAOC;;AAIGI,EAAAA,YAAY,GAAG;AACX;AAEJ,UAAMN,GAAG,GAAG,KAAKF,IAAL,CAAUC,KAAV,CAAgBE,UAAhB,CAA2B,IAA3B,CAAZ;AACA,QAAIC,GAAG,GAAGK,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAN,IAAAA,GAAG,CAACO,GAAJ,GAAS,eAAT;AACDT,IAAAA,GAAG,CAACK,SAAJ,CAAcH,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA4B,GAA5B,EAAgC,GAAhC,EANgB,CAOjB;AACD;;AAGLQ,EAAAA,MAAM,GAAE;AAMR,WACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,OAAO,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAQ,MAAA,GAAG,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAE,GAA3B;AAAgC,MAAA,MAAM,EAAE,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAK,MAAA,GAAG,EAAC,OAAT;AAAiB,MAAA,GAAG,EAAC,eAArB;AAAqC,MAAA,SAAS,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,EAYQ,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZR,CADJ,CADA;AA2CC;;AAlFgD","sourcesContent":["import React,{Component} from 'react'\nimport {Grid, Container, Radio} from 'semantic-ui-react'\n\n\nexport default class Customize extends Component {\n\n    \n\n\n    \n    componentDidMount(){\n    const canvas = this.refs.pizza\n    const ctx = canvas.getContext('2d')\n    const img = this.refs.image  \n    \n    img.onload = () =>{\n     ctx.drawImage(img,0,0,300,300)   \n\n\n    }\n    \n\n    }\n\n    \n\n        updateCanvas( ){\n            // run this when \"canvasLoading\" is false\n        \n        const ctx = this.refs.pizza.getContext(\"2d\");\n        var img = document.createElement(\"img\");\n        img.src= \"../pizza.jpeg\"\n       ctx.drawImage(img, 200, 200,300,300);\n      // ctx.fillRect(0,0, 100, 100)\n    }\n    \n\nrender(){\n\n\n\n\n\nreturn(\n<Grid>\n    <Grid.Row columns={1}>\n        <Grid.Column>\n            <Container>\n\n\n                <canvas ref=\"pizza\" width={800} height={800}/>\n                <img ref=\"image\" src=\"../pizza.jpeg\" className=\"hidden\" />\n \n                    \n                </Container>\n            </Grid.Column>\n\n            <Grid.Column>\n            {/* <Container> */}\n            {/* <input type=\"radio\"/><label>Tomato </label> */}\n\n                {/* <img src= \"../pizza.jpeg\"/> */}\n\n                {/* </Container> */}\n            </Grid.Column>\n\n\n\n\n\n\n    </Grid.Row>\n\n\n\n\n</Grid>\n\n\n\n\n\n\n\n\n)\n}\n}"]},"metadata":{},"sourceType":"module"}