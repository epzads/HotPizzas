{"ast":null,"code":"var _jsxFileName = \"/Users/abdulquadri/Documents/Development/hotpizza/HotPizzas/src/components/Customize.js\";\nimport React, { Component } from 'react';\nimport { Grid, Container, Radio } from 'semantic-ui-react';\nexport default class Customize extends Component {\n  constructor() {\n    super();\n\n    this.handler = () => {\n      window.onload = function () {\n        const can = this.refs.pizza;\n        var ctx = can.getContext(\"2d\"); //         let img = document.createElement(\"img\")\n        //         img.src= \"../greenpeppers.png\"\n        //         ctx.drawImage(img, 10, 10,100,100);\n      };\n    };\n\n    this.state = {\n      dislay: \"\"\n    };\n  }\n\n  test() {\n    const stylee = {\n      display: 'none'\n    };\n    return React.createElement(\"img\", {\n      ref: \"image\",\n      src: \"../empty.jpg\",\n      style: stylee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }); //<\n  }\n\n  test2() {\n    const stylee = {\n      display: 'none'\n    };\n    return React.createElement(\"img\", {\n      ref: \"greenpepper\",\n      src: \"../pizza.jpeg\",\n      style: stylee,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }); //<img ref=\"greenpepper\"  src=\"../greenpeppers.png\" style={stylee} />\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.pizza;\n    const ctx = canvas.getContext('2d');\n    const img = this.refs.image;\n    const greenp = this.refs.greenpepper;\n\n    img.onload = () => {\n      //ctx.drawImage(img,50,50,400,400)   \n      ctx.drawImage(img, 50, 50, 400, 400);\n      ctx.drawImage(greenp, 20, 20, 100, 100);\n    };\n  }\n\n  updateCanvas() {\n    // run this when \"canvasLoading\" is false\n    const ctx = this.refs.pizza.getContext(\"2d\");\n    var img = document.createElement(\"img\");\n    img.src = \"../pizza.jpeg\";\n    ctx.drawImage(img, 200, 200, 300, 300); // ctx.fillRect(0,0, 100, 100)\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: \"pizza\",\n      width: 800,\n      height: 800,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.test(), this.test2())), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      onClick: this.handler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Tomato \")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/abdulquadri/Documents/Development/hotpizza/HotPizzas/src/components/Customize.js"],"names":["React","Component","Grid","Container","Radio","Customize","constructor","handler","window","onload","can","refs","pizza","ctx","getContext","state","dislay","test","stylee","display","test2","componentDidMount","canvas","img","image","greenp","greenpepper","drawImage","updateCanvas","document","createElement","src","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport {Grid, Container, Radio} from 'semantic-ui-react'\n\n\nexport default class Customize extends Component {\n    constructor(){\n     super()   \n     this.state={\n     dislay:\"\"   \n     }   \n\n     \n\n\n\n    }\n    \n    \n    test(){\n        const stylee= {display: 'none'};\n        return(\n        <img ref=\"image\"  src=\"../empty.jpg\" style={stylee} />)\n        //<\n        \n    }\n    test2(){\n        const stylee= {display: 'none'};\n        return(\n            <img ref=\"greenpepper\"  src=\"../pizza.jpeg\" style={stylee} /> )      \n             //<img ref=\"greenpepper\"  src=\"../greenpeppers.png\" style={stylee} />\n        \n    }\n\n\n\n\n    componentDidMount(){\n    const canvas = this.refs.pizza\n    const ctx = canvas.getContext('2d')\n    const img = this.refs.image\n    const greenp = this.refs.greenpepper  \n    \n    img.onload = () =>{\n     //ctx.drawImage(img,50,50,400,400)   \n     ctx.drawImage(img,50,50,400,400) \n     ctx.drawImage(greenp,20,20,100,100)  \n\n    }\n}\n     handler=()=>{\n         window.onload = function() {\n             const can = this.refs.pizza\n            var ctx = can.getContext(\"2d\");\n    //         let img = document.createElement(\"img\")\n    //         img.src= \"../greenpeppers.png\"\n    //         ctx.drawImage(img, 10, 10,100,100);\n           }\n             \n\n     }\n\n\n    \n    \n\n        updateCanvas(){\n            // run this when \"canvasLoading\" is false\n        \n        const ctx = this.refs.pizza.getContext(\"2d\");\n        var img = document.createElement(\"img\");\n        img.src= \"../pizza.jpeg\"\n       ctx.drawImage(img, 200, 200,300,300)\n      // ctx.fillRect(0,0, 100, 100)\n    }\n    \n\nrender(){\n\n\n\n\n\nreturn(\n<Grid>\n    <Grid.Row columns={1}>\n        <Grid.Column>\n            <Container>\n\n\n                <canvas ref=\"pizza\" width={800} height={800}/>\n                \n                {this.test()}\n                {this.test2()}\n                    \n                </Container>\n            </Grid.Column>\n\n            <Grid.Column>\n            <Container>\n            <input type=\"radio\" onClick={this.handler}/><label>Tomato </label> \n\n                \n\n                </Container>\n            </Grid.Column>\n\n\n\n\n\n\n    </Grid.Row>\n\n\n\n\n</Grid>\n\n\n\n\n\n\n\n\n)\n}\n}"]},"metadata":{},"sourceType":"module"}